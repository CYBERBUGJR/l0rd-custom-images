name: Build Custom Images

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'images/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'images/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  discover-images:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Discover image directories
        id: set-matrix
        run: |
          # Find all directories in images/ that contain a Dockerfile
          IMAGE_DIRS=$(find images -mindepth 1 -maxdepth 1 -type d -exec test -f {}/Dockerfile \; -print | sed 's|images/||' | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=$IMAGE_DIRS" >> $GITHUB_OUTPUT
          echo "Found image directories: $IMAGE_DIRS"

  build-images:
    needs: discover-images
    if: needs.discover-images.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ${{ fromJson(needs.discover-images.outputs.matrix) }}
      fail-fast: false
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.image }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./images/${{ matrix.image }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image build summary
        run: |
          echo "## ðŸŽ‰ Successfully built image: ${{ matrix.image }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.meta.outputs.tags }}' | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ matrix.image }}" >> $GITHUB_STEP_SUMMARY